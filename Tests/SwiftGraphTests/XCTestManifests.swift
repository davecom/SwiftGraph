#if !canImport(ObjectiveC)
import XCTest

extension ConstructorsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConstructorsTests = [
        ("testCompleteGraphConstructor", testCompleteGraphConstructor),
        ("testEmptyCompleteGraphConstructor", testEmptyCompleteGraphConstructor),
        ("testSingletonCompleteGraphConstructor", testSingletonCompleteGraphConstructor),
        ("testSingletonStarGraphConstructor", testSingletonStarGraphConstructor),
        ("testStarGraphConstructor", testStarGraphConstructor),
    ]
}

extension CycleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CycleTests = [
        ("testDetectCyclesEdges1", testDetectCyclesEdges1),
        ("testDetectCyclesVertices1", testDetectCyclesVertices1),
        ("testFullyConnectedEdges", testFullyConnectedEdges),
        ("testFullyConnectedVertices", testFullyConnectedVertices),
    ]
}

extension DijkstraGraphTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DijkstraGraphTests = [
        ("testDijkstra1", testDijkstra1),
        ("testDijkstra2", testDijkstra2),
        ("testDijkstra3", testDijkstra3),
        ("testRemovalWithDijkstra", testRemovalWithDijkstra),
    ]
}

extension DirectedPseudoForestTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DirectedPseudoForestTests = [
        ("testHashablePseudoForest", testHashablePseudoForest),
        ("testNonHashablePseudoForest", testNonHashablePseudoForest),
    ]
}

extension EdgeListTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EdgeListTests = [
        ("testCompleteGraph", testCompleteGraph),
        ("testDirectedAndUndirectedEdges", testDirectedAndUndirectedEdges),
        ("testDirectedAndUndirectedLoops", testDirectedAndUndirectedLoops),
        ("testSingleDirectedEdgeList", testSingleDirectedEdgeList),
        ("testSingleDirectedLoopList", testSingleDirectedLoopList),
        ("testSingleUndirectedEdgeList", testSingleUndirectedEdgeList),
        ("testSingleUndirectedLoopList", testSingleUndirectedLoopList),
        ("testTwoDirectedEdges", testTwoDirectedEdges),
        ("testTwoDirectedLoops", testTwoDirectedLoops),
        ("testTwoUndirectedEdges", testTwoUndirectedEdges),
        ("testTwoUndirectedLoops", testTwoUndirectedLoops),
    ]
}

extension MSTTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MSTTests = [
        ("testMST1", testMST1),
        ("testMST2", testMST2),
    ]
}

extension SwiftGraphCodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftGraphCodableTests = [
        ("testComplexWeightedEncodableDecodable", testComplexWeightedEncodableDecodable),
        ("testEncodableDecodable", testEncodableDecodable),
    ]
}

extension SwiftGraphSearchTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftGraphSearchTests = [
        ("testBFS1", testBFS1),
        ("testBFS2", testBFS2),
        ("testBFS3", testBFS3),
        ("testBFS4", testBFS4),
        ("testBFS5", testBFS5),
        ("testBFS6", testBFS6),
        ("testBfsGoalTestOnInitialVertex", testBfsGoalTestOnInitialVertex),
        ("testBfsInCompleteGraphWithGoalTestByIndex", testBfsInCompleteGraphWithGoalTestByIndex),
        ("testBFSNotFound", testBFSNotFound),
        ("testBfsVisitOrderWithCycle", testBfsVisitOrderWithCycle),
        ("testBFSWithCycle", testBFSWithCycle),
        ("testDFS1", testDFS1),
        ("testDFS2", testDFS2),
        ("testDFS3", testDFS3),
        ("testDFS4", testDFS4),
        ("testDFS5", testDFS5),
        ("testDFS6", testDFS6),
        ("testDfsDoesntVisitTwice", testDfsDoesntVisitTwice),
        ("testDfsGoalTestOnInitialVertex", testDfsGoalTestOnInitialVertex),
        ("testDfsInCompleteGraphWithGoalTestByIndex", testDfsInCompleteGraphWithGoalTestByIndex),
        ("testDFSNotFound", testDFSNotFound),
        ("testDfsVisitOrderWithCycle", testDfsVisitOrderWithCycle),
        ("testDFSWithCycle", testDFSWithCycle),
        ("testFindAllBfs", testFindAllBfs),
        ("testFindAllDfs", testFindAllDfs),
        ("testTraverseBfsOnCycle", testTraverseBfsOnCycle),
        ("testTraverseDfsOnCycle", testTraverseDfsOnCycle),
    ]
}

extension SwiftGraphSortTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftGraphSortTests = [
        ("testDAG", testDAG),
        ("testTopologicalSort", testTopologicalSort),
    ]
}

extension SwiftGraphTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftGraphTests = [
        ("testCitesInverseAfterRemove", testCitesInverseAfterRemove),
        ("testCounts", testCounts),
        ("testRemoveAllEdges", testRemoveAllEdges),
        ("testSequenceTypeAndCollectionType", testSequenceTypeAndCollectionType),
        ("testSubscript", testSubscript),
    ]
}

extension UnionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnionTests = [
        ("testAssociativity", testAssociativity),
        ("testCommutativity", testCommutativity),
        ("testDisjointUnion", testDisjointUnion),
        ("testEmptyGraph", testEmptyGraph),
        ("testIdentityEmptyGraph", testIdentityEmptyGraph),
        ("testImmutabilityOfInputGraphs", testImmutabilityOfInputGraphs),
        ("testMultipleParameters", testMultipleParameters),
        ("testUnionFirstInCommon", testUnionFirstInCommon),
        ("testUnionLastInCommon", testUnionLastInCommon),
        ("testUnionWithSelf", testUnionWithSelf),
    ]
}

extension UnweightedGraphTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnweightedGraphTests = [
        ("testCycleInitializerDirected", testCycleInitializerDirected),
        ("testCycleInitializerUndirected", testCycleInitializerUndirected),
        ("testEdgeExists", testEdgeExists),
        ("testPathInitializerDirected", testPathInitializerDirected),
        ("testPathInitializerUndirected", testPathInitializerUndirected),
    ]
}

extension UnweightedUniqueElementsGraphHashableInitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnweightedUniqueElementsGraphHashableInitTests = [
        ("testCycleInitializerDirected", testCycleInitializerDirected),
        ("testCycleInitializerUndirected", testCycleInitializerUndirected),
        ("testPathInitializerDirected", testPathInitializerDirected),
        ("testPathInitializerUndirected", testPathInitializerUndirected),
    ]
}

extension UnweightedUniqueElementsGraphHashableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnweightedUniqueElementsGraphHashableTests = [
        ("testUniqueDirectedEdges", testUniqueDirectedEdges),
        ("testUniqueDirectedLoop", testUniqueDirectedLoop),
        ("testUniqueDirectedLoop2", testUniqueDirectedLoop2),
        ("testUniqueEdgesCombined1", testUniqueEdgesCombined1),
        ("testUniqueEdgesCombined2", testUniqueEdgesCombined2),
        ("testUniqueEdgesCombined3", testUniqueEdgesCombined3),
        ("testUniqueEdgesCombined4", testUniqueEdgesCombined4),
        ("testUniqueUndirectedEdges", testUniqueUndirectedEdges),
        ("testUniqueUndirectedEdges2", testUniqueUndirectedEdges2),
        ("testUniqueUndirectedLoop", testUniqueUndirectedLoop),
        ("testUniqueUndirectedLoop2", testUniqueUndirectedLoop2),
        ("testUniqueVertexAfterAddition", testUniqueVertexAfterAddition),
        ("testUniqueVertexAfterInit", testUniqueVertexAfterInit),
    ]
}

extension UnweightedUniqueElementsGraphInitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnweightedUniqueElementsGraphInitTests = [
        ("testCycleInitializerDirected", testCycleInitializerDirected),
        ("testCycleInitializerUndirected", testCycleInitializerUndirected),
        ("testPathInitializerDirected", testPathInitializerDirected),
        ("testPathInitializerUndirected", testPathInitializerUndirected),
    ]
}

extension UnweightedUniqueElementsGraphTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UnweightedUniqueElementsGraphTests = [
        ("testUniqueDirectedEdges", testUniqueDirectedEdges),
        ("testUniqueDirectedLoop", testUniqueDirectedLoop),
        ("testUniqueDirectedLoop2", testUniqueDirectedLoop2),
        ("testUniqueEdgesCombined", testUniqueEdgesCombined),
        ("testUniqueUndirectedEdges", testUniqueUndirectedEdges),
        ("testUniqueUndirectedEdges2", testUniqueUndirectedEdges2),
        ("testUniqueUndirectedLoop", testUniqueUndirectedLoop),
        ("testUniqueUndirectedLoop2", testUniqueUndirectedLoop2),
        ("testUniqueVertexAfterAddition", testUniqueVertexAfterAddition),
        ("testUniqueVertexAfterInit", testUniqueVertexAfterInit),
    ]
}

extension UtilsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__UtilsTests = [
        ("testAllDistinct", testAllDistinct),
        ("testHashableAllDistinct", testHashableAllDistinct),
    ]
}

extension WeightedGraphTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WeightedGraphTests = [
        ("testEdgeExists", testEdgeExists),
        ("testWeights", testWeights),
    ]
}

extension WeightedUniqueElementsGraphTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WeightedUniqueElementsGraphTests = [
        ("testUniqueDirectedEdgesDifferentWeight", testUniqueDirectedEdgesDifferentWeight),
        ("testUniqueDirectedEdgesSameWeight", testUniqueDirectedEdgesSameWeight),
        ("testUniqueDirectedLoop2DifferentWeight", testUniqueDirectedLoop2DifferentWeight),
        ("testUniqueDirectedLoop2SameWeight", testUniqueDirectedLoop2SameWeight),
        ("testUniqueDirectedLoopDifferentWeight", testUniqueDirectedLoopDifferentWeight),
        ("testUniqueDirectedLoopSameWeight", testUniqueDirectedLoopSameWeight),
        ("testUniqueEdgesCombinedDifferentWeight1", testUniqueEdgesCombinedDifferentWeight1),
        ("testUniqueEdgesCombinedDifferentWeight2", testUniqueEdgesCombinedDifferentWeight2),
        ("testUniqueEdgesCombinedSameWeight", testUniqueEdgesCombinedSameWeight),
        ("testUniqueUndirectedEdges2", testUniqueUndirectedEdges2),
        ("testUniqueUndirectedEdgesDifferentWeight", testUniqueUndirectedEdgesDifferentWeight),
        ("testUniqueUndirectedEdgesSameWeight", testUniqueUndirectedEdgesSameWeight),
        ("testUniqueUndirectedLoop2DifferentWeight", testUniqueUndirectedLoop2DifferentWeight),
        ("testUniqueUndirectedLoop2SameWeight", testUniqueUndirectedLoop2SameWeight),
        ("testUniqueUndirectedLoopDifferentWeight", testUniqueUndirectedLoopDifferentWeight),
        ("testUniqueUndirectedLoopSameWeight", testUniqueUndirectedLoopSameWeight),
        ("testUniqueVertexAfterAddition", testUniqueVertexAfterAddition),
        ("testUniqueVertexAfterInit", testUniqueVertexAfterInit),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ConstructorsTests.__allTests__ConstructorsTests),
        testCase(CycleTests.__allTests__CycleTests),
        testCase(DijkstraGraphTests.__allTests__DijkstraGraphTests),
        testCase(DirectedPseudoForestTests.__allTests__DirectedPseudoForestTests),
        testCase(EdgeListTests.__allTests__EdgeListTests),
        testCase(MSTTests.__allTests__MSTTests),
        testCase(SwiftGraphCodableTests.__allTests__SwiftGraphCodableTests),
        testCase(SwiftGraphSearchTests.__allTests__SwiftGraphSearchTests),
        testCase(SwiftGraphSortTests.__allTests__SwiftGraphSortTests),
        testCase(SwiftGraphTests.__allTests__SwiftGraphTests),
        testCase(UnionTests.__allTests__UnionTests),
        testCase(UnweightedGraphTests.__allTests__UnweightedGraphTests),
        testCase(UnweightedUniqueElementsGraphHashableInitTests.__allTests__UnweightedUniqueElementsGraphHashableInitTests),
        testCase(UnweightedUniqueElementsGraphHashableTests.__allTests__UnweightedUniqueElementsGraphHashableTests),
        testCase(UnweightedUniqueElementsGraphInitTests.__allTests__UnweightedUniqueElementsGraphInitTests),
        testCase(UnweightedUniqueElementsGraphTests.__allTests__UnweightedUniqueElementsGraphTests),
        testCase(UtilsTests.__allTests__UtilsTests),
        testCase(WeightedGraphTests.__allTests__WeightedGraphTests),
        testCase(WeightedUniqueElementsGraphTests.__allTests__WeightedUniqueElementsGraphTests),
    ]
}
#endif
